./ ADD NAME=ZIP      0101-02115-02115-1443-00014-00015-00000-SYSPJK1
/* REXX */
parse arg idsn irecfm ilrecl . ;
say "Production zip JOB entered";
say "Passed input filename:" idsn;
say "Passed input RECFM:" irecfm;
say "Passed input LRECL:" ilrecl;
address syscall "chdir /production"; /* dir where zip.class is */
classpath = "/usr/lpp/java/J1.1/lib/classes.zip"; /* java 1.1.8 clas*/
classpath = classpath":/usr/lpp/java/J1.1/lib/recordio.jar";
classpath = classpath":/production"; /* dir where zip.class is */
"/usr/lpp/java/J1.1/bin/java -classpath" classpath ,
   "zip" idsn irecfm ilrecl;
say "Production zip JOB ended";
exit 0;
./ ADD NAME=ZIPJ$DOC 0108-02115-02115-1556-00040-00001-00039-SYSPJK1
OS/390 USS Java-based zip exec/program

This was developed/tested on OS/390 V2.6 with Java JDK 1.1.8.
A newer JDK may be used.

ZIPTEST - JCL to run ZIP REXX exec
          This JCL runs the ZIP java program and copies all of the
          output to SDSF-accessible output and also copies the
          zipped file to an OS/390 file.
ZIP - REXX exec to invoke java-based program.
ZIPJAVA - Java program source

Please make sure that you have the following as a minimum in your
.profile file in your personal USS directory
PATH=$PATH:$HOME:/usr/lpp/java/J1.1/bin
CLASSPATH=/usr/lpp/java/J1.1/lib/classes.zip

After following standard XMIT process and the files are in an
OS/390 library and you have a personal USS workarea directory

Copy the files to your HFS directory as in the folowing sample:
from TSO option 6:
oput 'YourOS390Library(ZIPJAVA)' '/YourDIR/zip.java' text
oput 'YourOS390Library(ZIP)' '/YourDIR/zip' text

Compiling the zip.java program from within USS
javac -verbose zip.java
This should create a zip.class file in your HFS subdirectory

Update the zip REXX-based program first:
Change all directory names, etc. as required
For example, the line:
address syscall "chdir /production";
"/production" has to be changed to point to your install directory

Update the ZIPTEST JCL as approriate.

The resulting zipped file is placed in an OS/390 dataset that
may be FTPed BINARY MODE down to another system to be unzipped OR
can be placed in an HFS file and accessed via NFS, etc.
./ ADD NAME=ZIPJAVA  0100-02115-02115-1649-00070-00070-00000-SYSPJK1
import java.io.*;
import java.util.StringTokenizer;
import java.util.zip.ZipEntry;
import java.util.zip.ZipOutputStream;
import com.ibm.record.*;
import com.ibm.recordio.*;

public class zip {

    static File zipFile = null;
    static ZipEntry z = null;
    static ZipOutputStream zip = null;

    public static void format(String fromFile,
                              String fromRECFM,
                              String fromLRECLS) throws Exception {
        int fromLRECL = Integer.parseInt(fromLRECLS.trim());
        LineNumberReader from = null;
        try {
        zipFile = new File("/tmp/"+fromFile+".zip");
        z = new ZipEntry(fromFile);
        zip = new ZipOutputStream(new FileOutputStream(zipFile));
        zip.putNextEntry(z);
IRecordFile rf = RecordFile.getInstanceOf("//" + fromFile,
                                          fromLRECL,
                                          fromRECFM);
IFileInputRecordStream inpFile = FileInputRecordStream.getInstanceOf(rf);
byteÝ¨ buffer = new byteÝfromLRECL¨;
for(;;)
{ int bytesRead = inpFile.read(buffer);
  if (bytesRead != IConstants.JRIO_READ_EOF)
      { // if
        String linex = new String(buffer,0,fromLRECL,"Cp1047");
                linex = 'x' + linex;
                linex = linex.trim().substring(1);
                if(linex.length() == 0)
                    linex = " " + linex;
                linex = linex + "\n";
                zip.write(linex.getBytes("8859_1"));
      } // end if
    else {break;}
} // end for
inpFile.close();
} // end try
        finally {}
            if(zip != null)
                try {
                    zip.closeEntry();
                    zip.close();
                }
                catch(IOException _ex) { }
    } // end format

    public static void main(String argsÝ¨)
        throws FileNotFoundException, IOException {
        if(args.length != 3)
            System.err.println("Usage: java zip <3 PARMS>");
        else
            try {
                format(argsÝ0¨, argsÝ1¨, argsÝ2¨);
            }
            catch(Exception e) {
                System.err.println(e.getMessage());
            }
    } // end main

    public zip() {
    }

} // end class
./ ADD NAME=ZIPTEST  0105-01299-02115-1439-00036-00030-00018-SYSPJK1
//SYSPJK1A JOB (SPJK,7583),'KAPLAN',NOTIFY=&SYSUID,
//         MSGCLASS=X,CLASS=M,REGION=0M,TIME=1440
//*
//* Sample JCL to exercise java-based zip program
//*
//* The JOBNAME of this JOB
//JOBNAME  SET J=SYSPJK1A
//* Input DSNAME of the file to be zipped
//INPUTDSN SET I=SYSPJK1.AJVINST.EXEC
//* Input file RECFM - code FB or VB
//INRECFM  SET R=FB
//* Input file LRECL
//INLRECL  SET L=80
//*
//S1 EXEC PGM=BPXBATCH,
// PARM=('SH /production/zip &I &R &L') <== change directory name
//STDOUT DD PATH='/tmp/&J..stdout',  <== /tmp/ directory
// PATHOPTS=(OWRONLY,OCREAT,OTRUNC),PATHMODE=SIRWXU
//STDERR DD PATH='/tmp/&J..stderr',
// PATHOPTS=(OWRONLY,OCREAT,OTRUNC),PATHMODE=SIRWXU
//*
//S2 EXEC PGM=IKJEFT01,DYNAMNBR=255
//ZIPIN   DD PATH='/tmp/&I..zip',PATHDISP=(DELETE,DELETE)
//ZIPOUT  DD DSN=SYSPJK1.TEST.ZIP,DISP=(NEW,CATLG), <==OS/390 output
//  UNIT=SYSDA,RECFM=U,LRECL=0,BLKSIZE=27998,
//  AVGREC=M,SPACE=(1,(1,1))
//HFSOUT  DD PATH='/tmp/&J..stdout',PATHDISP=(DELETE,DELETE)
//HFSERR  DD PATH='/tmp/&J..stderr',PATHDISP=(DELETE,DELETE)
//STDOUT DD SYSOUT=*,RECFM=VB,LRECL=133,BLKSIZE=137
//STDERR DD SYSOUT=*,RECFM=VB,LRECL=133,BLKSIZE=137
//SYSTSPRT DD DUMMY
//SYSTSIN  DD *
  OCOPY INDD(ZIPIN) OUTDD(ZIPOUT) BINARY
  OCOPY INDD(HFSOUT) OUTDD(STDOUT)
  OCOPY INDD(HFSERR) OUTDD(STDERR)
//
